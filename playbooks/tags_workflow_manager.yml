# Everything at Once
- hosts: dnac_servers
  vars_files:
    - credentials.yml
  gather_facts: False
  connection: local
  tasks:
    - name: Create a Tag.
      cisco.dnac.tags_workflow_manager:
        dnac_host: "{{ dnac_host }}"
        dnac_port: "{{ dnac_port }}"
        dnac_username: "{{ dnac_username }}"
        dnac_password: "{{ dnac_password }}"
        dnac_verify: "{{ dnac_verify }}"
        dnac_debug: "{{ dnac_debug }}"
        dnac_version: "{{ dnac_version }}"
        dnac_log: True
        dnac_log_level: DEBUG
        dnac_log_append: True
        dnac_log_file_path: "{{ dnac_log_file_path }}"
        state: merged
        config_verify: False
        config:
          - tags:  
              name: ServersTag # String, Required
              description: Tag for devices and interfaces connected to servers # String, Optional
              device_rules:
                rule_descriptions:
                  - rule_name: device_name   # String, Choices : {device_name, device_family, device_series, ip_address, location, version}
                    search_pattern: contains # String, Choices : {contains, equals, starts_with, ends_with}
                    value: Device_name          # String
                    operation: ILIKE       # String, Default: ILIKE, Optional, Choices : {ILIKE, LIKE} (LIKE is case sensitive search)       
                  - rule_name: Device_Family  
                    search_pattern: contains 
                    value: Device_Family 
                    operation: ILIKE
                  - rule_name: Device_Series  
                    search_pattern: contains 
                    value: Device_Series 
                    operation: ILIKE
                  - rule_name: ip_address  
                    search_pattern: contains 
                    value: IP ADDRESS 
                    operation: ILIKE  
                  - rule_name: location  
                    search_pattern: contains 
                    value: Location 
                    operation: ILIKE  
                  - rule_name: Version  
                    search_pattern: contains 
                    value: Version 
                    operation: ILIKE  

              # Both port rules and devices rules can be given together.
              port_rules:
                scope_description: # Required while creating the rules. For updating, scope_description is not required unless a change has to be made.
                  grouping_category: TAG # String, Choices: {TAG, SITE} 
                  group_members: # Tag names for grouping_category: TAG and site name hierarchies for grouping_category: SITE
                    - TEST101
                    - TEST102
                rule_descriptions:
                  - rule_name: speed         # String, Choices : {speed, admin_status, port_name, operational_status, description}
                    search_pattern: contains # String, Choices : {contains, equals, starts_with, ends_with}
                    value: "100000"          # String
                    operation: ILIKE         # String, Default: ILIKE, Optional, Choices : {ILIKE, LIKE} (LIKE is case sensitive search)  
                  - rule_name: port_name  
                    search_pattern: contains 
                    value: tengig/1/0/1
                    operation: ILIKE 
                  - rule_name: admin_status 
                    search_pattern: contains 
                    value: tengig/1/0/1
                    operation: ILIKE  

              assign_members: # Assigning the created tag to members (devices/ports).
                device_details: 
                  - ip_addresses: 
                      - 10.197.156.97
                      - 10.197.156.98
                      - 204.1.216.5
                    hostnames: 
                      - SJC_Border1 
                      - NY_Border1
                    mac_addresses: 
                      - e4:38:7e:42:bc:00
                      - 34:5d:a8:3b:d8:e0
                    serial_numbers: 
                      - SAD055006NE
                      - SAD055108C2
                    port_names: 
                      - FortyGigabitEthernet1/1/1
                      - FortyGigabitEthernet1/1/2  
                site_details: 
                  - site_names: 
                      - Global/BLR
                      - Global/HYD
                    port_names: 
                      - FortyGigabitEthernet1/1/1
                      - FortyGigabitEthernet1/1/2
            tags_membership:
              tags:  
                - ServerTag1 
                - ServerTag2
              device_details: 
                - ip_addresses: 
                    - 10.197.156.97
                    - 10.197.156.98
                    - 10.197.156.99
                  hostnames: 
                    - SJC_Border1 
                    - SJC_Border2
                    - NY_Border1
                  mac_addresses: 
                    - e4:38:7e:42:bc:00
                    - 6c:d6:e3:75:5a:e0
                    - 34:5d:a8:3b:d8:e0
                  serial_numbers: 
                    - SAD055006NE
                    - SAD04350EEU
                    - SAD055108C2
                  port_names: 
                    - FortyGigabitEthernet1/1/1
                    - FortyGigabitEthernet1/1/2  
              site_details: 
                - site_names: 
                    - Global/BLR
                    - Global/HYD
                  port_names: 
                    - FortyGigabitEthernet1/1/1
                    - FortyGigabitEthernet1/1/2




# # Merged
# Lets say the ServerTag1 already has .97 IP, and I am giving the following playbook, 
# What it should do:

#             tags_membership:
#               tags:  
#                 - ServerTag1 
#               device_details: 
#                 - ip_addresses: 
#                     # - 10.197.156.97
#                     - 10.197.156.98
#                     - 10.197.156.99

# 1) Add the .98 and .99 IP as its members and NOT remove the already existing members (that's .97)
# So the current members will be .97,.98,.99

# 2) Replace the existing members (clean the member list)
# and then assign .98 and .99 to the members
# SO the current members will be .98, .99

# # Deleted
# Lets say the ServerTag1 has all three, .97, .98, .99
# and the following playbook is given, 

#             tags_membership:
#               tags:  
#                 - ServerTag1 
#               device_details: 
#                 - ip_addresses: 
#                     # - 10.197.156.97
#                     - 10.197.156.98
#                     - 10.197.156.99

# 1) It is expected to remove just .98 and .99
# and it'll not delete the ServerTag1 and it still keeps the .97 member
# So current members are .97

# 2) Remove the Tag entirely, Remove all the members and remove the tag then?

